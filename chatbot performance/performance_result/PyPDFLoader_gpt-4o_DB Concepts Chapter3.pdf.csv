,user_input,retrieved_contexts,response,reference,answer_relevancy,context_precision,faithfulness,context_recall,answer_correctness
0,Who invented SQL standard when?,"['ft h eSystem R project in the early 1970s. The Sequel language has evolved since then,and its name has changed toSQL(Structured Query Language). Many productsnow support theSQLlanguage.SQLhas clearly established itself asthestandardrelational database language.In 1986, the American National Standards Institute (ANSI)a n dt h eI n t e r n a -tional Organization for Standardization (ISO)p u b l i s h e da nSQLstandard, calledSQL-86.ANSIpublished an extended standard forSQL,SQL-89,i n1 9 8 9 .T h en e x tv e r -sion of the standard wasSQL-92standard, followed bySQL:1999,SQL:2003,SQL:2006,and most recentlySQL:2008. The bibliographic notes provide references to thesestandards.TheSQLlanguage has several parts:•Data-deﬁnition language(DDL). TheSQL DDLprovides commands for deﬁn-ing relation schemas, deleting relations, and modifying relation schemas.•Data-manipulation language(DML). TheSQL DMLprovides the ability toquery information from the database and to insert tuples into, delete', '112Chapter 3Introduction to SQLinstructions on how to set up and access some popular database systems. TheSQLconstructs discussed in this chapter are part of theSQLstandard, but certainfeatures are not supported by some databases. The Web site lists these incom-patibilities, which you will need to takeinto account when executing queries onthose databases.Bibliographical NotesThe original version ofSQL,c a l l e dS e q u e l2 ,i sd e s c r i b e db yC h a m b e r l i ne ta l .[1976]. Sequel 2 was derived from the language Square (Boyce et al. [1975] andChamberlin and Boyce [1974]). The American National StandardSQL-86is de-scribed in ANSI [1986]. TheIBMSystems Application Architecture deﬁnition ofSQLis deﬁned by IBM [1987]. The ofﬁcial standards forSQL-89andSQL-92areavailable as ANSI [1989] and ANSI [1992], respectively.Textbook descriptions of theSQL-92language include Date and Darwen [1997],Melton and Simon [1993], and Cannan and Otten [1993]. Date and Darwen [1997]and Date [1993a]', 'and ANSI [1992], respectively.Textbook descriptions of theSQL-92language include Date and Darwen [1997],Melton and Simon [1993], and Cannan and Otten [1993]. Date and Darwen [1997]and Date [1993a] include a critique ofSQL-92from a programming-languagesperspective.Textbooks onSQL:1999include Melton and Simon [2001] and Melton [2002].Eisenberg and Melton [1999] provide an overview ofSQL:1999.D o n a h o oa n dSpeegle [2005] coversSQLfrom a developers’ perspective. Eisenberg et al. [2004]provides an overview ofSQL:2003.TheSQL:1999,SQL:2003,SQL:2006 andSQL:2008 standards are published as acollection ofISO/IECstandards documents, which are described in more detailin Section 24.4. The standards documentsa r ed e n s e l yp a c k e dw i t hi n f o r m a t i o nand hard to read, and of use primarily for database system implementers. Thestandards documents are available from the Web sitehttp://webstore.ansi.org,b u tonly for purchase.Many database products supportSQLfeatures beyond those', 'for database system implementers. Thestandards documents are available from the Web sitehttp://webstore.ansi.org,b u tonly for purchase.Many database products supportSQLfeatures beyond those speciﬁed in thestandard, and may not support some features of the standard. More informationon these features may be found in theSQLuser manuals of the respective products.The processing ofSQLqueries, including algorithms and performance issues,is discussed in Chapters 12 and 13. Bibliographic references on these mattersappear in those chapters.', 'CHAPTER3Introduction to SQLThere are a number of database query languages in use, either commercially orexperimentally. In this chapter, as well as in Chapters 4 and 5, we study the mostwidely used query language,SQL.Although we refer to theSQLlanguage as a“query language,”it can do muchmore than just query a database. It can deﬁne the structure of the data, modifydata in the database, and specify security constraints.It is not our intention to provide a complete users’ guide forSQL.R a t h e r ,w epresentSQL’s fundamental constructs and concepts. Individual implementationsofSQLmay differ in details, or may support only a subset of the full language.3.1Overview of the SQL Query LanguageIBMdeveloped the original version ofSQL,o r i g i n a l l yc a l l e dS e q u e l ,a sp a r to ft h eSystem R project in the early 1970s. The Sequel language has evolved since then,and its name has changed toSQL(Structured Query Language). Many productsnow support theSQLlanguage.SQLhas clearly', '104Chapter 3Introduction to SQL3.10Summary•SQLis the most inﬂuential commercially marketed relational query language.TheSQLlanguage has several parts:◦Data-deﬁnition language(DDL), which provides commands for deﬁningrelation schemas, deleting relations, and modifying relation schemas.◦Data-manipulation language(DML), which includes a query languageand commands to insert tuples into, delete tuples from, and modify tuplesin the database.•TheSQLdata-deﬁnition language is used to create relations with speciﬁedschemas. In addition to specifying the names and types of relation attributes,SQLalso allows the speciﬁcation of integrity constraints such as primary-keyconstraints and foreign-key constraints.•SQLincludes a variety of language constructs for queries on the database.These include theselect,from,a n dwhereclauses, and support for the naturaljoin operation.•SQLalso provides mechanisms to rename both attributes and relations, andto order query results by sorting on speciﬁed']","The SQL standard was developed by IBM in the early 1970s as part of the System R project, originally called SEQUEL. The American National Standards Institute (ANSI) published the first SQL standard, SQL-86, in 1986.","In 1986, the American National Standards Institute (ANSI) and the International Organization for Standardization (ISO) published an SQL standard, called SQL-86",0.9467981488690062,0.99999999998,1.0,1.0,0.23540604468245302
1,How data integrity can be implemented in SQL language?,"['58Chapter 3Introduction to SQL•Integrity.T h eSQL DDLincludes commands for specifying integrity con-straints that the data stored in the database must satisfy. Updates that violateintegrity constraints are disallowed.•View deﬁnition.T h eSQL DDLincludes commands for deﬁning views.•Transaction control.SQLincludes commands for specifying the beginningand ending of transactions.•EmbeddedSQLanddynamicSQL.E m b e d d e da n dd y n a m i cSQLdeﬁne howSQLstatements can be embedded within general-purpose programming lan-guages, such as C, C++, and Java.•Authorization.T h eSQL DDLincludes commands for specifying access rightsto relations and views.In this chapter, we present a survey of basicDMLand theDDLfeatures ofSQL.Features described here have been part of theSQLstandard sinceSQL-92.In Chapter 4, we provide a more detailed coverage of theSQLquery language,including (a) various join expressions; (b) views; (c) transactions; (d) integrityconstraints; (e) type system; and (f) authorization.In', 'between implementa-tions. Most implementations support some nonstandard features, while omittingsupport for some of the more advanced features. In case you ﬁnd that some lan-guage features described here do not work on the database system that you use,consult the user manuals for your database system to ﬁnd exactly what featuresit supports.3.2SQL Data DeﬁnitionThe set of relations in a database mustbe speciﬁed to the system by means of adata-deﬁnition language (DDL). TheSQL DDLallows speciﬁcation of not only aset of relations, but also information about each relation, including:•The schema for each relation.•The types of values associated with each attribute.•The integrity constraints.•The set of indices to be maintained for each relation.', 'integrity constraint.For example, if a newly inserted or modiﬁed tuple in a relation has null values forany primary-key attribute, or if the tuple has the same value on the primary-keyattributes as does another tuple in the relation,SQLﬂags an error and prevents theupdate. Similarly, an insertion of acoursetuple with adept', '104Chapter 3Introduction to SQL3.10Summary•SQLis the most inﬂuential commercially marketed relational query language.TheSQLlanguage has several parts:◦Data-deﬁnition language(DDL), which provides commands for deﬁningrelation schemas, deleting relations, and modifying relation schemas.◦Data-manipulation language(DML), which includes a query languageand commands to insert tuples into, delete tuples from, and modify tuplesin the database.•TheSQLdata-deﬁnition language is used to create relations with speciﬁedschemas. In addition to specifying the names and types of relation attributes,SQLalso allows the speciﬁcation of integrity constraints such as primary-keyconstraints and foreign-key constraints.•SQLincludes a variety of language constructs for queries on the database.These include theselect,from,a n dwhereclauses, and support for the naturaljoin operation.•SQLalso provides mechanisms to rename both attributes and relations, andto order query results by sorting on speciﬁed', '4, we provide a more detailed coverage of theSQLquery language,including (a) various join expressions; (b) views; (c) transactions; (d) integrityconstraints; (e) type system; and (f) authorization.In Chapter 5, we cover more advanced features of theSQLlanguage, including(a) mechanisms to allow accessingSQLfrom a programming language; (b)SQLfunctions and procedures; (c) triggers; (d) recursive queries; (e) advanced aggre-gation features; and (f) several features designed for data analysis, which wereintroduced inSQL:1999, and subsequent versions ofSQL.L a t e r ,i nC h a p t e r2 2 ,w eoutline object-oriented extensions toSQL,w h i c hw e r ei n t r o d u c e di nSQL:1999.Although mostSQLimplementations support the standard features we de-scribe here, you should be aware that there are differences between implementa-tions. Most implementations support some nonstandard features, while omittingsupport for some of the more advanced features. In case you ﬁnd that some lan-guage features', 'ft h eSystem R project in the early 1970s. The Sequel language has evolved since then,and its name has changed toSQL(Structured Query Language). Many productsnow support theSQLlanguage.SQLhas clearly established itself asthestandardrelational database language.In 1986, the American National Standards Institute (ANSI)a n dt h eI n t e r n a -tional Organization for Standardization (ISO)p u b l i s h e da nSQLstandard, calledSQL-86.ANSIpublished an extended standard forSQL,SQL-89,i n1 9 8 9 .T h en e x tv e r -sion of the standard wasSQL-92standard, followed bySQL:1999,SQL:2003,SQL:2006,and most recentlySQL:2008. The bibliographic notes provide references to thesestandards.TheSQLlanguage has several parts:•Data-deﬁnition language(DDL). TheSQL DDLprovides commands for deﬁn-ing relation schemas, deleting relations, and modifying relation schemas.•Data-manipulation language(DML). TheSQL DMLprovides the ability toquery information from the database and to insert tuples into, delete']","Data integrity in SQL can be implemented using integrity constraints such as primary-key constraints, which ensure that each row in a table is unique, and foreign-key constraints, which enforce referential integrity between tables. SQL also supports other constraints like NOT NULL, UNIQUE, and CHECK to maintain data accuracy and consistency. Additionally, SQL transactions can be used to ensure that a series of operations are completed successfully before committing changes to the database.",The SQL DDL includes commands for specifying integrity constraints that the data stored in the database must satisfy. Updates that violate integrity constraints are disallowed.,0.9208434913252047,0.99999999998,0.5714285714285714,1.0,0.7248081492306804
2,What does char(n) and varchar(n) mean?,"['to prohibit null values from being entered, aswe shall see shortly.Thechardata type stores ﬁxed length strings. Consider, for example, anattributeAof typechar(10). If we store a string“Avi”in this attribute, 7 spacesare appended to the string to make it 10 characters long. In contrast, if attributeBwere of typevarchar(10), and we store“Avi”in attributeB,n os p a c e sw o u l db eadded. When comparing two values of typechar,i ft h e ya r eo fd i f f e r e n tl e n g t h sextra spaces are automatically added to the shorter one to make them the samesize, before comparison.When comparing achartype with avarchartype, one may expect extra spacesto be added to thevarchartype to make the lengths equal, before comparison;however, this may or may not be done, depending on the database system. As aresult, even if the same value“Avi”is stored in the attributesAandBabove, acomparisonA=Bmay return false. We recommend you always use thevarchartype instead of thechartype to avoid these problems.', '3.2SQL Data Deﬁnition59•The security and authorization information for each relation.•The physical storage structure of each relation on disk.We discuss here basic schema deﬁnition and basic types; we defer discussion ofthe otherSQL DDLfeatures to Chapters 4 and 5.3.2.1 Basic TypesTheSQLstandard supports a variety of built-in types, including:•char(n): A ﬁxed-length character string with user-speciﬁed lengthn.T h ef u l lform,character,c a nb eu s e di n s t e a d .•varchar(n): A variable-length character string with user-speciﬁed maximumlengthn.T h ef u l lf o r m ,character varying,i se q u i v a l e n t .•int: An integer (a ﬁnite subset of the integers that is machine dependent). Thefull form,integer,i se q u i v a l e n t .•smallint:As m a l li n t e g e r( am a c h i n e - d e p e n d e n ts u b s e to ft h ei n t e g e rt y p e ) .•numeric(p,d): A ﬁxed-point number with user-speciﬁed precision. The num-ber consists ofpdigits (plus a sign), anddof thepdigits are to the right ofthe', '60Chapter 3Introduction to SQLSQLalso provides thenvarchartype to store multilingual data using theUnicode representation. However, many databases allow Unicode (in theUTF-8representation) to be stored even invarchartypes.3.2.2 Basic Schema DeﬁnitionWe deﬁne anSQLrelation by using thecreate tablecommand. The followingcommand creates a relationdepartmentin the database.create tabledepartment(dept\nnamevarchar(20),buildingvarchar(15),budgetnumeric(12,2),primary key(dept\nname));The relation created above has three attributes,dept\nname,w h i c hi sac h a r a c t e rstring of maximum length 20,building,w h i c hi sac h a r a c t e rs t r i n go fm a x i m u mlength 15, andbudget,w h i c hi san u m b e rw i t h1 2d i g i t si nt o t a l ,2o fw h i c ha r eafter the decimal point. Thecreate tablecommand also speciﬁes that thedept', 'level or at the level of speciﬁcattributes.SQLalso permits a variety of functions on character strings, such as concate-nating (using“∥”), extracting substrings, ﬁnding the length of strings, convertingstrings to uppercase (using the functionupper(s)w h e r esis a string) and low-ercase (using the functionlower(s)), removing spaces at the end of the string(usingtrim(s)) and so on. There are variations on the exact set of string functionssupported by different database systems. See your database system’s manual formore details on exactly what string functions it supports.Pattern matching can be performed on strings, using the operatorlike.W edescribe patterns by using two special characters:•Percent (%): The % character matches any substring.•Underscore (', '76Chapter 3Introduction to SQL3.4.2 String OperationsSQLspeciﬁes strings by enclosing them in single quotes, for example, ’Computer’.As i n g l eq u o t ec h a r a c t e rt h a ti sp a r to fas t r i n gc a nb es p e c i ﬁ e db yu s i n gt w os i n g l equote characters; for example, the string“It’s right”can be speciﬁed by“It”s right”.TheSQLstandard speciﬁes that the equalityo p e r a t i o no ns t r i n g si sc a s es e n -sitive; as a result the expression“’comp. sci.’ = ’Comp. Sci.’”evaluates to false.However, some database systems, such asMySQLandSQL Server, do not distin-guish uppercase from lowercase when matching strings; as a result“’comp. sci.’=’ C o m p .S c i . ’”would evaluate to true on these databases. This default behaviorcan, however, be changed, either at the database level or at the level of speciﬁcattributes.SQLalso permits a variety of functions on character strings, such as concate-nating (using“∥”), extracting substrings, ﬁnding the length of strings,', 'e n ts u b s e to ft h ei n t e g e rt y p e ) .•numeric(p,d): A ﬁxed-point number with user-speciﬁed precision. The num-ber consists ofpdigits (plus a sign), anddof thepdigits are to the right ofthe decimal point. Thus,numeric(3,1) allows 44.5t ob es t o r e de x a c t l y ,b u tneither 444.5o r0.32 can be stored exactly in a ﬁeld of this type.•real, double precision:F l o a t i n g - p o i n ta n dd o u b l e - p r e c i s i o nﬂ o a t i n g - p o i n tnumbers with machine-dependent precision.•ﬂoat(n): A ﬂoating-point number, with precision of at leastndigits.Additional types are covered in Section 4.5.Each type may include a special value called thenullvalue. A null valueindicates an absent value that may exist but be unknown or that may not exist atall. In certain cases, we may wish to prohibit null values from being entered, aswe shall see shortly.Thechardata type stores ﬁxed length strings. Consider, for example, anattributeAof typechar(10). If we store a string“Avi”in this']","The `char(n)` data type in SQL represents a fixed-length character string with a specified length `n`, meaning it always uses `n` characters, padding with spaces if necessary. The `varchar(n)` data type, on the other hand, represents a variable-length character string with a maximum length of `n`, using only as many characters as needed without padding. It is generally recommended to use `varchar` to avoid issues with space padding during comparisons.","char(n) is a fixed-length character string with user-specified length n. The full form, character, can be used instead. On the other hand, varchar(n) A variable-length character string with user-specified maximum length n. The full form, character varying, is equivalent.",0.9265838210266667,0.9999999999833333,0.8,1.0,0.5048814507802812
3,"To remove a table from SQL database, which sql query will be used?","['3.3Basic Structure of SQL Queries63would delete all tuples from thestudentrelation. Other forms of the delete com-mand allow speciﬁc tuples to be deleted; the delete command is covered in moredetail later, in Section 3.9.1.To remove a relation from anSQLdatabase, we use thedrop tablecommand.Thedrop tablecommand deletes all information about the dropped relation fromthe database. The commanddrop tabler;is a more drastic action thandelete fromr;The latter retains relationr,b u td e l e t e sa l lt u p l e si nr.T h ef o r m e rd e l e t e sn o to n l yall tuples ofr,b u ta l s ot h es c h e m af o rr.A f t e rris dropped, no tuples can beinserted intorunless it is re-created with thecreate tablecommand.We use thealter tablecommand to add attributes to an existing relation. Alltuples in the relation are assignednullas the value for the new attribute. The formof thealter tablecommand isalter tableraddAD;whereris the name of an existing relation,Ais the name of the attribute to beadded,', 'show how to add,remove, or change information withSQL.3.9.1 DeletionAd e l e t er e q u e s ti se x p r e s s e di nm u c ht h es a m ew a ya saq u e r y .W ec a nd e l e t eo n l ywhole tuples; we cannot delete values on only particular attributes.SQLexpressesad e l e t i o nb ydelete fromrwhereP;wherePrepresents a predicate andrrepresents a relation. Thedeletestatementﬁrst ﬁnds all tuplestinrfor whichP(t)i st r u e ,a n dt h e nd e l e t e st h e mf r o mr.T h ewhereclause can be omitted, in which case all tuples inrare deleted.Note that adeletecommand operates on only one relation. If we want to deletetuples from several relations, we must use onedeletecommand for each relation.The predicate in thewhereclause may be as complex as aselectcommand’swhereclause. At the other extreme, thewhereclause may be empty. The request', 'idof 1.c. Enroll every student in the Comp. Sci. department in the above sec-tion.d. Delete enrollments in the above section where the student’s name isChavez.e. Delete the course CS-001. What will happen if you run this deletestatement without ﬁrst deleting offerings (sections) of this course.f. Delete alltakestuples corresponding to any section of any course withthe word“database”as a part of the title; ignore case when matchingthe word with the title.3.13WriteSQL DDLcorresponding to the schema in Figure 3.18. Make anyreasonable assumptions about data types, and be sure to declare primaryand foreign keys.3.14Consider the insurance database of Figure 3.18, where the primary keysare underlined. Construct the followingSQLqueries for this relationaldatabase.a. Find the number of accidents in which the cars belonging to“JohnSmith”were involved.b. Update the damage amount for the car with the license number“AABB2000”in the accident with report number“AR2197”to $3000.3.15Consider the bank', 'schemas, deleting relations, and modifying relation schemas.•Data-manipulation language(DML). TheSQL DMLprovides the ability toquery information from the database and to insert tuples into, delete tuplesfrom, and modify tuples in the database.57', '3.3Basic Structure of SQL Queries65\ndept\nname\nComp. Sci.\nFinance\nMusic\nPhysics\nHistory\nPhysics\nComp. Sci.\nHistory\nFinance\nBiology\nComp. Sci.\nElec. Eng.\nFigure 3.3Result of“selectdept\nnamefrominstructor”.if we want duplicates removed. The result of the above query would contain eachdepartment name at most once.SQLallows us to use the keywordallto specify explicitly that duplicates arenot removed:select alldept\nnamefrominstructor;Since duplicate retention is the default, we shall not useallin our examples. Toensure the elimination of duplicates in the results of our example queries, weshall usedistinctwhenever it is necessary.Theselectclause may also contain arithmetic expressions involving the op-erators+,−,∗,a n d/o p e r a t i n go nc o n s t a n t so ra t t r i b u t e so ft u p l e s .F o re x a m p l e ,the query:selectID,name,dept', 'nameandcourse.dept\nnameto differ, and theSQLquery gives the correct answer.3.4Additional Basic OperationsThere are number of additional basico p e r a t i o n st h a ta r es u p p o r t e di nSQL.3.4.1 The Rename OperationConsider again the query that we used earlier:selectname,course\nidfrominstructor,teacheswhereinstructor.ID=teaches.ID;The result of this query is a relation with the following attributes:name,course']","To remove a table from an SQL database, the `DROP TABLE` command is used. For example, `DROP TABLE table_name;` will delete the table and all its data from the database.",We can use 'drop table r' to drop the specified table r from the database.,0.9441586637983895,0.8055555555287036,1.0,1.0,0.5856660965148177
4,"Can select clause in sql contain arithmetic expressions like '+', '-' or '/'?","['98Chapter 3Introduction to SQLcan be used in theselectclause as illustrated in the following example that listsall departments along with the number of instructors in each department:selectdept\nname,(select count(*)frominstructorwheredepartment.dept\nname=instructor.dept\nname)asnum\ninstructorsfromdepartment;The subquery in the above example is guaranteed to return only a single valuesince it has acount(*) aggregate without agroup by.T h ee x a m p l ea l s oi l l u s t r a t e sthe usage of correlation variables, that is, attributes of relations in thefromclauseof the outer query, such asdepartment.dept', '92Chapter 3Introduction to SQLSQLdoes, however, offer an alternative style for writing the preceding query. Thephrase“greater than at least one”is represented inSQLby>some.T h i sc o n s t r u c tallows us to rewrite the query in a form that resembles closely our formulationof the query in English.selectnamefrominstructorwheresalary>some(selectsalaryfrominstructorwheredept\nname=’Biology’);The subquery:(selectsalaryfrominstructorwheredept', 'which provides more powerfulpattern matching than thelikeoperation; the syntax for specifying patterns issimilar to that used in Unix regular expressions.3.4.3 Attribute Speciﬁcation in Select ClauseThe asterisk symbol“*”can be used in theselectclause to denote“all attributes.”Thus, the use ofinstructor.* in theselectclause of the query:selectinstructor.*frominstructor,teacheswhereinstructor.ID=teaches.ID;indicates that all attributes ofinstructorare to be selected. Aselectclause of theformselect*i n d i c a t e st h a ta l la t t r i b u t e so ft h er e s u l tr e l a t i o no ft h efromclauseare selected.3.4.4 Ordering the Display of TuplesSQLoffers the user some control over the order in which tuples in a relationare displayed. Theorder byclause causes the tuples in the result of a query toappear in sorted order. To list in alphabetic order all instructors in the Physicsdepartment, we write:selectnamefrominstructorwheredept', 'name=’Comp. Sci.’andsalary>70000;If theinstructorrelation is as shown in Figure 2.1, then the relation that resultsfrom the preceding query is shown in Figure 3.4.SQLallows the use of the logical connectivesand,or,a n dnotin thewhereclause. The operands of the logical connectives can be expressions involvingthe comparison operators<,<=,>,>=,=,a n d<>.SQLallows us to use thecomparison operators to compare strings and arithmetic expressions, as well asspecial types, such as date types.We shall explore other features ofwhereclause predicates later in this chapter.3.3.2 Queries on Multiple RelationsSo far our example queries were on a single relation. Queries often need to accessinformation from multiple relations. We now study how to write such queries.An an example, suppose we want to answer the query“Retrieve the namesof all instructors, along with their department names and department buildingname.”Looking at the schema of the relationinstructor,w er e a l i z et h a tw ec a ng e tthe', '3.3Basic Structure of SQL Queries65\ndept\nname\nComp. Sci.\nFinance\nMusic\nPhysics\nHistory\nPhysics\nComp. Sci.\nHistory\nFinance\nBiology\nComp. Sci.\nElec. Eng.\nFigure 3.3Result of“selectdept\nnamefrominstructor”.if we want duplicates removed. The result of the above query would contain eachdepartment name at most once.SQLallows us to use the keywordallto specify explicitly that duplicates arenot removed:select alldept\nnamefrominstructor;Since duplicate retention is the default, we shall not useallin our examples. Toensure the elimination of duplicates in the results of our example queries, weshall usedistinctwhenever it is necessary.Theselectclause may also contain arithmetic expressions involving the op-erators+,−,∗,a n d/o p e r a t i n go nc o n s t a n t so ra t t r i b u t e so ft u p l e s .F o re x a m p l e ,the query:selectID,name,dept', 'Practice Exercises105•Null value•Query language•SQLquery structure◦selectclause◦fromclause◦whereclause•Natural join operation•asclause•orderby clause•Correlation name (correlation vari-able, tuple variable)•Set operations◦union◦intersect◦except•Null values◦Truth value“unknown”•Aggregate functions◦avg, min, max, sum, count◦group by◦having•Nested subqueries•Set comparisons◦{<, <=, >, >=}{some, all}◦exists◦unique•lateralclause•withclause•Scalar subquery•Database modiﬁcation◦Deletion◦Insertion◦UpdatingPractice Exercises3.1Write the following queries inSQL,u s i n gt h eu n i v e r s i t ys c h e m a .( W es u g -gest you actually run these queries on a database, using the sample datathat we provide on the Web site of the book,db-book.com.I n s t r u c t i o n sf o rsetting up a database, and loading sample data, are provided on the aboveWeb site.)a. Find the titles of courses in the Comp. Sci. department that have 3credits.b. Find theIDso fa l ls t u d e n t sw h ow e r et a u g h tb ya ni']","Yes, the `SELECT` clause in SQL can contain arithmetic expressions involving operators like `+`, `-`, `*`, and `/`, which can operate on constants or attributes of tuples.",Yes. the artihmetic expressions with select clause let constant or attributes of tuples be operated.,0.9152367778175251,0.691666666649375,1.0,1.0,0.9838225346654399
